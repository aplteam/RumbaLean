# On the Client:<<br>>Constructing Requests and Handling Responses

The NewClient function creates a new client:

~~~
     c←NewClient 0
~~~

The NewRequest function creates a new request:

~~~
     q←NewRequest 0
~~~

Starting from here three of the possible RESTful commands are discussed: GET, HEAD and POST.

## GET

In order to actually request something the URI must be specified:

~~~
     q.URI←'/HelloWorld'
~~~
                    
The method does not need to be specified if it is "GET" because that is the default.

Once the URI is specified the request can be send with SendAndReceive; the client c and the request q are passed as arguments:

~~~
     r←c SendAndReceive q
     r.StatusCode
200
~~~   

Note that the →[*.StatusCodeRegistry|HTTP code] 200 stands for "OK".

The GetContent function collects and returns the response from the server.

~~~
     ⎕←GetContent r
~~~

## HEAD

We need a new request:

~~~
     q←NewRequest 0
~~~

Because it is not a "GET" (the default) we must specify the method:

~~~
     q.Method←'HEAD'
~~~

The URI is mandatory:

~~~
     q.URI←'/HelloWorld'
~~~

Sending the request and retrieving the response:

~~~
     r←c SendAndReceive q
     r.StatusCode
200
     ⎕←r.Content
~~~

## POST

~~~
    q←NewRequest 0
~~~

Because it is not a "GET" (the default) we must specify the method:

~~~
  q.Method←'PUT'
~~~
  
The URI is mandatory:

~~~
     q.URI←'/Strings/Mercury'   
~~~

A PUT requires data to be send as content:

~~~
     q.Content←'Closest planet to the Sun'
~~~
   
Sending the request and retrieving the response:

~~~
     r←c SendAndReceive q
     r.StatusCode
201 
~~~

Note that the →[*.StatusCodeRegistry|HTTP code] 201 means "Created".
